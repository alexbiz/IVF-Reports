.grid_2.alpha
  .sidebar
    %h2 Compare Across:
    %ul#statistic-selectable.jqueryui-selectable
      %li.ui-selected Age Group
      %li Diagnosis
      %li Year
    %h2 Statistic To Visualize:
    %ul#statistic-visualize-selectable.jqueryui-selectable
      %li.ui-selected Implantation Rate
      %li Embryos Transferred (Avg)
      %li Pregnancy Rate (Per Cycle)
      %li Birth Rate (Per Cycle)
      %li Birth Rate (Per Retrieval)
      %li Birth Rate (Per Transfer)
      %li Single Embryo Transfer Rate
      %li Cancellation Rate
      %li Twin Rate
      %li Triplet Rate
.grid_6
  .comparator_content
    %h2.results_title Select Two Clinics to Compare
    .clinic_selection
      .clinic_a 
        Clinic A
        %select#clinic_a_select
          %option{:value => ""} Select a Clinic
          -@clinics.each do |c|
            %option{:value => "clinic_a_#{c.id}", :id => "clinic_a_id_#{c.id}"}="#{c.clinic_name} - #{c.city}, #{c.state}"
      .clinic_b 
        Clinic B
        %select#clinic_b_select
          %option{:value => ""} Select a Clinic
          -@clinics.each do |c|
            %option{:value => "clinic_b_#{c.id}", :id => "clinic_b_id_#{c.id}"}="#{c.clinic_name} - #{c.city}, #{c.state}"
    #comparison_results
      %h2.query_title Currently Showing National Data
      %canvas#comparison_canvas{:width => '480', :height => '500'} [No Canvas Support]
.grid_2.omega
  .sidebar
    #age-group-selector.variable-selector.hidden
      %h2 Select Age Group:
      %ul#age-selectable.jqueryui-selectable
        %li.ui-selected <35
        %li 35-37
        %li 38-40
        %li 41-42
        %li >42
    #diagnosis-selector.variable-selector
      %h2 Select a Diagnosis:
      %ul#diagnosis-selectable.jqueryui-selectable
        %li.ui-selected All Diagnoses
        %li Endometriosis
        %li Diminished Ovarian Reserve
        %li Multiple Female Factors
        %li Ovulatory Dysfunction
        %li Tubal Factor
        %li Female and Male Factors
        %li Male Factor
        %li Other Factor
        %li Uterine Factor
        %li Unknown Factor
    #year-selector.variable-selector
      %h2 Select a Year:
      %ul#year-selectable.jqueryui-selectable
        %li.ui-selected 2010
        %li 2009
        %li 2008
        %li 2007
        %li 2006
        %li 2005
:javascript
  var clinic_a_id = 384;
  var clinic_b_id = 384;
  var year = 2010;
  var age_group = "<35";
  var statistic_across = "age_group";
  var statistic_visualize = "implantation_rate";
  var cycle_type = "fresh";
  var diagnosis = "All Diagnoses";
  var graph_type = "vertical_bar";
  $(document).ready(function(){
    

    $('#statistic-selectable').selectable({
      stop: function(){
        $( ".ui-selected", this ).each(function() {
          var index = $( "#statistic-selectable li" ).index( this );
          if(index==0){
            statistic_across="age_group";
            $('div#age-group-selector').addClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
          else if(index==1){
            statistic_across="diagnosis";
            $('div#age-group-selector').removeClass('hidden');
            $('div#diagnosis-selector').addClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
          else if(index==2){
            statistic_across="year";
            $('div#age-group-selector').removeClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').addClass('hidden');
          }
          else{
            statistic_across="age_group";
            $('div#age-group-selector').addClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
        });
        RenderGraph();
      }
    });

    $('#statistic-visualize-selectable').selectable({
      stop: function(){
        $( ".ui-selected", this ).each(function() {
          var index = $('#statistic-visualize-selectable li').index(this);
          if(index==0){
            statistic_visualize="implantation_rate";
          }
          else if(index==1){
            statistic_visualize="avg_num_embs_transferred";
          }
          else if(index==2){
            statistic_visualize="pregs_per_cycle";
          }
          else if(index==3){
            statistic_visualize="births_per_cycle";
          }
          else if(index==4){
            statistic_visualize="births_per_retrieval";
          }
          else if(index==5){
            statistic_visualize="births_per_transfer";
          }
          else if(index==6){
            statistic_visualize="set_transfer_rate";
          }
          else if(index==7){
            statistic_visualize="cancellation_rate";
          }
          else if(index==8){
            statistic_visualize="twin_rate";
          }
          else if(index==9){
            statistic_visualize="trip_rate";
          }
          else{
            statistic_visualize="implantation_rate";
          }
        });
        RenderGraph();
      }
    });

    $('#year-selectable').selectable({
      stop: function(){
        $('div#clinic_list').html("");
        $('div#clinic_list').addClass('ajax_loading');
        $( ".ui-selected", this ).each(function() {
          var index = $( "#year-selectable li" ).index( this );
          if(index==0){
            year = "2010";
          }
          else if(index==1){
            year = "2009";
          }
          else if(index==2){
            year = "2008";
          }
          else if(index==3){
            year = "2007";
          }
          else if(index==4){
            year = "2006";
          }
          else if(index==5){
            year = "2005";
          }
          else{
            year = "2010";
          }
        });
        RenderGraph();
      }
    });

    $('#age-selectable').selectable({
      stop: function(){
        $('div#clinic_list').html("");
        $('div#clinic_list').addClass('ajax_loading');
        $( ".ui-selected", this ).each(function() {
          var index = $( "#age-selectable li" ).index( this );
          if(index==0){
            age_group="<35";
          }
          else if(index==1){
            age_group="35-37";
          }
          else if(index==2){
            age_group="38-40";
          }
          else if(index==3){
            age_group="41-42";
          }
          else if(index==4){
            age_group=">42";
          }
          else{
            age_group="<35";
          }
        });
        RenderGraph();
      }
    });

    $('#diagnosis-selectable').selectable({
      stop: function(){
        $('div#clinic_list').html("");
        $('div#clinic_list').addClass('ajax_loading');
        $( ".ui-selected", this ).each(function() {
          var index = $( "#diagnosis-selectable li" ).index( this );
          if(index==0){
            diagnosis="All Diagnoses";
          }
          else if(index==1){
            diagnosis="Endometriosis";
          }
          else if(index==2){
            diagnosis="Diminished Ovarian Reserve";
          }
          else if(index==3){
            diagnosis="Multiple Female Factors";
          }
          else if(index==4){
            diagnosis="Ovulatory Dysfunction";
          }
          else if(index==5){
            diagnosis="Tubal Factor";
          }
          else if(index==6){
            diagnosis="Female and Male Factors";
          }
          else if(index==7){
            diagnosis="Male Factor";
          }
          else if(index==8){
            diagnosis="Other Factor";
          }
          else if(index==9){
            diagnosis="Uterine Factor";
          }
          else if(index==10){
            diagnosis="Unknown Factor";
          }
          else{
            diagnosis="All Diagnoses";
          }
        });
        RenderGraph();
      }
    });

    $('select#clinic_a_select').change(function(){
      var clinic_id = "";
      $('select#clinic_a_select option:selected').each(function(){
        clinic_id = $(this).val();
      });
      clinic_id_array = clinic_id.split('_');
      clinic_a_id = parseInt(clinic_id_array[2]);      
      RenderGraph();								
    });

    $('select#clinic_b_select').change(function(){
      var clinic_id = "";
      $('select#clinic_b_select option:selected').each(function(){
        clinic_id = $(this).val();
      });
      clinic_id_array = clinic_id.split('_');
      clinic_b_id = parseInt(clinic_id_array[2]);
      RenderGraph();														
    });

    $('h2.query_title').html("Currently Showing National Data");
  });

  function RenderGraph(){
    var data = {
      year: year,
      clinic_a_id: clinic_a_id,
      clinic_b_id: clinic_b_id,
      age_group: age_group,
      statistic_visualize: statistic_visualize,
      statistic_across: statistic_across,
      cycle_type: cycle_type,
      diagnosis: diagnosis
    }
    $.ajax({
      url: "#{url_for(:action => 'clinic_comparator', :controller => 'reports')}",
      dataType: 'json',
      async: true,
      data: data,
      success: 	function(data){
        var age_groups = ['<35', '35-37', '38-40', '41-42', '>42'];
        var diagnoses = ["All Diagnoses", "Endometriosis", "Diminished Ovarian Reserve", "Multiple Female Factors", "Ovulatory Dysfunction", "Tubal Factor", "Female and Male Factors", "Male Factor", "Other Factor", "Unknown Factor", "Uterine Factor"]
        var years = [2005, 2006, 2007, 2008, 2009, 2010]

        if(statistic_across=="age_group"){
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
        }
        else if(statistic_across=="diagnosis"){
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
        }
        else{
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
        }
        var cur_age_index = 0;
        var y_max = 0;
        var key_data = new Array();

        var statistic_name = "Implantation Rate"

        //Determine the name of the current statistic
        if(statistic_visualize=="implantation_rate"){
          statistic_name = "Implantation Rate";
        }
        else if(statistic_visualize=="avg_num_embs_transferred"){
          statistic_name = "Average Number of Embryos Transferred";
        }
        else if(statistic_visualize=="pregs_per_cycle"){
          statistic_name = "Pregnancy Rate (Per Cycle)";								
        }
        else if(statistic_visualize=="births_per_cycle"){
          statistic_name = "Birth Rate (Per Cycle)";								
        }
        else if(statistic_visualize=="births_per_retrieval"){
          statistic_name = "Birth Rate (Per Retrieval)";								
        }
        else if(statistic_visualize=="births_per_transfer"){
          statistic_name = "Birth Rate (Per Transfer)";								
        }
        else if(statistic_visualize=="set_transfer_rate"){
          statistic_name = "Single Embryo Transfer Rate";								
        }
        else if(statistic_visualize=="cancellation_rate"){
          statistic_name = "Cancellation Rate";								
        }
        else if(statistic_visualize=="twin_rate"){
          statistic_name = "Twin Rate";								
        }
        else if(statistic_visualize=="trip_rate"){
          statistic_name = "Triplet Rate";								
        }
        else{
          statistic_name = "Implantation Rate";								
        }

        //This needs to change depending on the statistic_across variable: there are more datapoints to get through in diagnoses
        if(clinic_a_id == 384 || clinic_b_id == 384){

        }
        else{
          if(data[0]['clinic_id']==384){
            var query_title = "<a href='/clinics/" + data[7]['permalink'] + "' target='_blank'>" + data[7]['clinic_name'] + "</a> | " + data[7]['city'] + ", " + data[7]['state'] + "<br/> VS <br/>" + "<a href='/clinics/" + data[14]['permalink'] + "' target='_blank'>" + data[14]['clinic_name'] + "</a> | " + data[14]['city'] + ", " + data[14]['state'];
          }
          else if(data[7]['clinic_id']==384){
            var query_title = "<a href='/clinics/" + data[0]['permalink'] + "' target='_blank'>" + data[0]['clinic_name'] + "</a> | " + data[0]['city'] + ", " + data[0]['state'] + "<br/> VS <br/>" + "<a href='/clinics/" + data[14]['permalink'] + "' target='_blank'>" + data[14]['clinic_name'] + "</a> | " + data[14]['city'] + ", " + data[14]['state'];
          }
          else{
            var query_title = "<a href='/clinics/" + data[0]['permalink'] + "' target='_blank'>" + data[0]['clinic_name'] + "</a> | " + data[0]['city'] + ", " + data[0]['state'] + "<br/> VS <br/>" + "<a href='/clinics/" + data[7]['permalink'] + "' target='_blank'>" + data[7]['clinic_name'] + "</a> | " + data[7]['city'] + ", " + data[7]['state'];
          }
        }

        $('h2.query_title').html(query_title);

        //Load the cycle data into the graph
        //Depends on the statistic that we are comparing across
        if(statistic_across=="age_group"){
          $.each(data, function(k){
            for(var i = 0; i < 5; i++){
              if(data[k]['clinic_id']==clinic_a_id){
                if(data[k]['age_group']==age_groups[i]){
                  key_data[1] = "Clinic A";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+1] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else if(graph_type=="line"){
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==clinic_b_id){
                if(data[k]['age_group']==age_groups[i]){
                  key_data[2] = "Clinic B";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][2] = data[k]['statistic_visualize'];
                    cycle_data[i][2] = data[k]['cycles'];
                    imp_data[i][2] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+2] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";											
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B Cycles: " + cycle_data[i][2] + "<br/>";
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B "+statistic_name+": " + Math.round(10*graph_data[i][2])/10;
                  }
                  else if(graph_type=="line"){
                    graph_data[2][i] = data[k]['statistic_visualize'];
                    cycle_data[2][i] = data[k]['cycles'];
                    imp_data[2][i] = data[k]['statistic_visualize'];
                    tooltips[2][i] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";											
                    tooltips[2][i] = tooltips[2][i] + "Clinic B Cycles: " + cycle_data[2][i] + "<br/>";
                    tooltips[2][i] = tooltips[2][i] + "Clinic B "+statistic_name+": " + Math.round(10*graph_data[2][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['age_group']==age_groups[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+0] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";								
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else if(graph_type=="line"){
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";								
                    tooltips[0][i] = tooltips[0][i] + "National Number of Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "National "+statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        } //If statistic across is age group

        else if(statistic_across=="diagnosis"){
          $.each(data, function(k){
            for(var i = 0; i < 11; i++){
              if(data[k]['clinic_id']==clinic_a_id){
                if(data[k]['diagnosis']==diagnoses[i]){
                  key_data[1] = "Clinic A";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+1] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else{
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==clinic_b_id){
                if(data[k]['diagnosis']==diagnoses[i]){
                  key_data[2] = "Clinic B";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][2] = data[k]['statistic_visualize'];
                    cycle_data[i][2] = data[k]['cycles'];
                    imp_data[i][2] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+2] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";											
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B Cycles: " + cycle_data[i][2] + "<br/>";
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B "+statistic_name+": " + Math.round(10*graph_data[i][2])/10;
                  }
                  else{
                    graph_data[2][i] = data[k]['statistic_visualize'];
                    cycle_data[2][i] = data[k]['cycles'];
                    imp_data[2][i] = data[k]['statistic_visualize'];
                    tooltips[2][i] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[2][i] = tooltips[2][i] + "Clinic A Cycles: " + cycle_data[2][i] + "<br/>";
                    tooltips[2][i] = tooltips[2][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[2][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['diagnosis']==diagnoses[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+0] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";								
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else{
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[0][i] = tooltips[0][i] + "Clinic A Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        }

        else if(statistic_across=="year"){
          $.each(data, function(k){
            for(var i = 0; i < 6; i++){
              if(data[k]['clinic_id']==clinic_a_id){
                if(data[k]['year']==years[i]){
                  key_data[1] = "Clinic A";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+1] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(3)+1] = tooltips[i*(3)+1] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else{
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==clinic_b_id){
                if(data[k]['year']==years[i]){
                  key_data[2] = "Clinic B";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][2] = data[k]['statistic_visualize'];
                    cycle_data[i][2] = data[k]['cycles'];
                    imp_data[i][2] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+2] = "<b>Year: "+ years[i] +"</b><br/>";											
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B Cycles: " + cycle_data[i][2] + "<br/>";
                    tooltips[i*(3)+2] = tooltips[i*(3)+2] + "Clinic B "+statistic_name+": " + Math.round(10*graph_data[i][2])/10;
                  }
                  else{
                    graph_data[2][i] = data[k]['statistic_visualize'];
                    cycle_data[2][i] = data[k]['cycles'];
                    imp_data[2][i] = data[k]['statistic_visualize'];
                    tooltips[2][i] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[2][i] = tooltips[2][i] + "Clinic A Cycles: " + cycle_data[2][i] + "<br/>";
                    tooltips[2][i] = tooltips[2][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[2][i])/10;													
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['year']==years[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(3)+0] = "<b>Year: "+ years[i] +"</b><br/>";								
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(3)+0] = tooltips[i*(3)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else{
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[0][i] = tooltips[0][i] + "Clinic A Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "Clinic A " + statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        }
        //Set the maximum y value		
        y_max = y_max + 5;
        if(y_max > 100.0){
          y_max = 100;
        }

        //Instantiate the new graph
        if(graph_type=="vertical_bar"){
          statistic_graph = new RGraph.Bar('comparison_canvas', graph_data);
        }
        else if(graph_type=="line"){
          statistic_graph = new RGraph.Line('comparison_canvas', graph_data);
        }
        else if(graph_type=="horizontal_bar"){
          statistic_graph = new RGraph.HBar('comparison_canvas', graph_data);
        }


        if(statistic_across=="age_group"){
          statistic_graph.Set('chart.labels', age_groups);
        }
        else if(statistic_across=="diagnosis"){
          statistic_graph.Set('chart.labels', diagnoses);
        }
        else{
          statistic_graph.Set('chart.labels', years);
        }

        statistic_graph.Set('chart.key', key_data);
        if(graph_type=="horizontal_bar" && statistic_across=="diagnosis"){
          statistic_graph.Set('chart.gutter.left', 175);
        }
        else{
          statistic_graph.Set('chart.gutter.left', 45);
        }
        statistic_graph.Set('chart.gutter.bottom', 150);
        statistic_graph.Set('chart.text.angle', 45);
        statistic_graph.Set('chart.key.position', 'gutter');
        statistic_graph.Set('chart.background.barcolor1', 'white');
        statistic_graph.Set('chart.background.barcolor2', 'ddffff');
        statistic_graph.Set('chart.colors', ['#65BDBD', '#7895A3', '#0F5151']);
        statistic_graph.Set('chart.variant', '3d');
        statistic_graph.Set('chart.text.font', 'Trebuchet MS');
        statistic_graph.Set('chart.text.size', 10);

        if(statistic_visualize=="avg_num_embs_transferred"){	
        }
        else{
          statistic_graph.Set('chart.units.post', '%');
        }
        if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
          statistic_graph.Set('chart.tooltips', tooltips);
        }
        else if(graph_type=="line"){
          statistic_graph.Set('chart.tooltips', tooltips);
        }
        statistic_graph.Set('chart.shadow', true);
        statistic_graph.Set('chart.shadow.blur', 5);
        statistic_graph.Set('chart.shadow.offsetx', 2);
        statistic_graph.Set('chart.shadow.offsety', 0);
        statistic_graph.Set('chart.shadow.color', '#0F5151');
        //statistic_graph.Set('chart.background.image', "#{::Rails.root}/app/assets/images/ivfr_washout.jpg");

        //Bar graph grow
        if(graph_type=="vertical_bar" || graph_type=="horizontal_bar"){
          RGraph.Effects.Bar.Wave(statistic_graph);
        }
        else{
          RGraph.Effects.Line.jQuery.Trace(statistic_graph);
        }
      }
    });
  }