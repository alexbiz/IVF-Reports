.grid_2.alpha
  .sidebar
    %h2 Compare Across:
    %ul#statistic-selectable.jqueryui-selectable
      %li.ui-selected Age Group
      %li Diagnosis
      %li Year
    %h2 Statistic To Visualize:
    %ul#statistic-visualize-selectable.jqueryui-selectable.masked
      %li.ui-selected Implantation Rate
      %li Embryos Transferred (Avg)
      %li Pregnancy Rate (Per Cycle)
      %li Birth Rate (Per Cycle)
      %li Birth Rate (Per Retrieval)
      %li Birth Rate (Per Transfer)
      %li Single Embryo Transfer Rate
      %li Cancellation Rate
      %li Twin Rate
      %li Triplet Rate
.grid_6
  .comparator_content
    %h2.results_title Select a Clinic to Analyze
    .clinic_selection
      .clinic_a 
        Select a Clinic
        %select#clinic_select
          %option{:value => ""} Select a Clinic
          -@clinics.each do |c|
            %option{:value => "clinic_#{c.id}", :id => "clinic_id_#{c.id}"}="#{c.clinic_name} - #{c.city}, #{c.state}"
      .clinic_b
        #clinic_link
    #comparison_results
      %h2.query_title
      %canvas#comparison_canvas{:width => '480', :height => '500'} [No Canvas Support]
.grid_2.omega
  .sidebar
    #age-group-selector.variable-selector.hidden
      %h2 Select Age Group:
      %ul#age-selectable.jqueryui-selectable.masked
        %li.ui-selected <35
        %li 35-37
        %li 38-40
        %li 41-42
        %li >42
    #diagnosis-selector.variable-selector
      %h2 Select a Diagnosis:
      %ul#diagnosis-selectable.jqueryui-selectable.masked
        %li.ui-selected All Diagnoses
        %li Endometriosis
        %li Diminished Ovarian Reserve
        %li Multiple Female Factors
        %li Ovulatory Dysfunction
        %li Tubal Factor
        %li Female and Male Factors
        %li Male Factor
        %li Other Factor
        %li Uterine Factor
        %li Unknown Factor
    #year-selector.variable-selector
      %h2 Select a Year:
      %ul#year-selectable.jqueryui-selectable.masked
        %li.ui-selected 2010
        %li 2009
        %li 2008
        %li 2007
        %li 2006
        %li 2005
:javascript
  var clinic_id = 384;
  var year = 2010;
  var age_group = "<35";
  var statistic_across = "age_group";
  var statistic_visualize = "implantation_rate";
  var cycle_type = "fresh";
  var diagnosis = "All Diagnoses";
  var graph_type = "vertical_bar";
  
  $(document).ready(function(){
    $('#graph-type-selectable').selectable({
      stop: function(){
        $(".ui-selected", this).each(function(){
          var index = $('#graph-type-selectable li').index(this);
          if(index==0){
            graph_type="vertical_bar";
          }
          else if(index==1){
            graph_type="horizontal_bar";
          }
          else if(index==2){
            graph_type="line";
          }
          else{
            graph_type="vertical_bar";
          }
        });
        RenderGraph();
      }
    });

    $('#statistic-selectable').selectable({
      stop: function(){
        $( ".ui-selected", this ).each(function() {
          var index = $( "#statistic-selectable li" ).index( this );
          if(index==0){
            statistic_across="age_group";
            $('div#age-group-selector').addClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
          else if(index==1){
            statistic_across="diagnosis";
            $('div#age-group-selector').removeClass('hidden');
            $('div#diagnosis-selector').addClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
          else if(index==2){
            statistic_across="year";
            $('div#age-group-selector').removeClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').addClass('hidden');
          }
          else{
            statistic_across="age_group";
            $('div#age-group-selector').addClass('hidden');
            $('div#diagnosis-selector').removeClass('hidden');
            $('div#year-selector').removeClass('hidden');
          }
        });
        RenderGraph();
      }
    });

    $('#statistic-visualize-selectable').selectable({
      disabled: true,
      stop: function(){
        alert("Please Upgrade Your Account to Gain Access to This Feature.");
      }
    });

    $('#year-selectable').selectable({
      disabled: true,
      stop: function(){
        alert("Please Upgrade Your Account to Gain Access to This Feature.");
      }
    });

    $('#age-selectable').selectable({
      disabled: true,
      stop: function(){
        alert("Please Upgrade Your Account to Gain Access to This Feature.");
      }
    });

    $('#diagnosis-selectable').selectable({
      disabled: true,
      stop: function(){
        alert("Please Upgrade Your Account to Gain Access to This Feature.");
      }
    });

    $('select#clinic_select').change(function(){
      $('select#clinic_select option:selected').each(function(){
        cur_clinic_id = $(this).val();
      });
      clinic_id_array = cur_clinic_id.split('_');
      clinic_id = parseInt(clinic_id_array[1]);
      RenderGraph();				
    });
  });

  function RenderGraph(){
    var data = {
      year: year,
      clinic_id: clinic_id,
      age_group: age_group,
      statistic_visualize: statistic_visualize,
      statistic_across: statistic_across,
      cycle_type: cycle_type,
      diagnosis: diagnosis
    }
    $.ajax({
      url: "#{url_for(:action => 'index', :controller => 'statistics')}",
      dataType: 'json',
      async: true,
      data: data,
      success: 	function(data){
        var age_groups = ['<35', '35-37', '38-40', '41-42', '>42'];
        var diagnoses = ["All Diagnoses", "Endometriosis", "Diminished Ovarian Reserve", "Multiple Female Factors", "Ovulatory Dysfunction", "Tubal Factor", "Female and Male Factors", "Male Factor", "Other Factor", "Unknown Factor", "Uterine Factor"]
        var years = [2005, 2006, 2007, 2008, 2009, 2010]

        if(statistic_across=="age_group"){
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array());
        }
        else if(statistic_across=="diagnosis"){
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
        }
        else{
          var graph_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var cycle_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var imp_data = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
          var tooltips = new Array(new Array(), new Array(), new Array(), new Array(), new Array(), new Array());
        }
        var cur_age_index = 0;
        var y_max = 0;
        var key_data = new Array();

        var statistic_name = "Implantation Rate"

        //Determine the name of the current statistic
        if(statistic_visualize=="implantation_rate"){
          statistic_name = "Implantation Rate";
        }
        else if(statistic_visualize=="avg_num_embs_transferred"){
          statistic_name = "Average Number of Embryos Transferred";
        }
        else if(statistic_visualize=="pregs_per_cycle"){
          statistic_name = "Pregnancy Rate (Per Cycle)";								
        }
        else if(statistic_visualize=="births_per_cycle"){
          statistic_name = "Birth Rate (Per Cycle)";								
        }
        else if(statistic_visualize=="births_per_retrieval"){
          statistic_name = "Birth Rate (Per Retrieval)";								
        }
        else if(statistic_visualize=="births_per_transfer"){
          statistic_name = "Birth Rate (Per Transfer)";								
        }
        else if(statistic_visualize=="set_transfer_rate"){
          statistic_name = "Single Embryo Transfer Rate";								
        }
        else if(statistic_visualize=="cancellation_rate"){
          statistic_name = "Cancellation Rate";								
        }
        else if(statistic_visualize=="twin_rate"){
          statistic_name = "Twin Rate";								
        }
        else if(statistic_visualize=="trip_rate"){
          statistic_name = "Triplet Rate";								
        }
        else{
          statistic_name = "Implantation Rate";								
        }

        var clinic_link = ""
        $.each(data, function(k){
          if(data[k]['clinic_id']==384){
          }
          else{
            clinic_link = "<a href='/clinics/" + data[k]['permalink'] + "' target='_blank'>" + data[k]['clinic_name'] + "</a>";
            $('.clinic_b #clinic_link').html(clinic_link);
          }
        });

        //Load the cycle data into the graph
        //Depends on the statistic that we are comparing across
        if(statistic_across=="age_group"){
          $.each(data, function(k){
            for(var i = 0; i < 5; i++){
              if(data[k]['clinic_id']==clinic_id){
                if(data[k]['age_group']==age_groups[i]){
                  key_data[1] = "Clinic Data";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+1] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else if(graph_type=="line"){
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['age_group']==age_groups[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+0] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";								
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else if(graph_type=="line"){
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Age Group: "+ age_groups[i] +"</b><br/>";								
                    tooltips[0][i] = tooltips[0][i] + "National Number of Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "National "+statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        } //If statistic across is age group

        else if(statistic_across=="diagnosis"){
          $.each(data, function(k){
            for(var i = 0; i < 11; i++){
              if(data[k]['clinic_id']==clinic_id){
                if(data[k]['diagnosis']==diagnoses[i]){
                  key_data[1] = "Clinic Data";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+1] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else{
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['diagnosis']==diagnoses[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+0] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";								
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else{
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Diagnosis: "+ diagnoses[i] +"</b><br/>";
                    tooltips[0][i] = tooltips[0][i] + "National Number of Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "National " + statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        }

        else if(statistic_across=="year"){
          $.each(data, function(k){
            for(var i = 0; i < 6; i++){
              if(data[k]['clinic_id']==clinic_id){
                if(data[k]['year']==years[i]){
                  key_data[1] = "Clinic";
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][1] = data[k]['statistic_visualize'];
                    cycle_data[i][1] = data[k]['cycles'];
                    imp_data[i][1] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+1] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's Cycles: " + cycle_data[i][1] + "<br/>";
                    tooltips[i*(2)+1] = tooltips[i*(2)+1] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[i][1])/10;
                  }
                  else{
                    graph_data[1][i] = data[k]['statistic_visualize'];
                    cycle_data[1][i] = data[k]['cycles'];
                    imp_data[1][i] = data[k]['statistic_visualize'];
                    tooltips[1][i] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's Cycles: " + cycle_data[1][i] + "<br/>";
                    tooltips[1][i] = tooltips[1][i] + "Clinic's " + statistic_name+": " + Math.round(10*graph_data[1][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
              if(data[k]['clinic_id']==384){
                if(data[k]['year']==years[i]){									
                  key_data[0] = data[k]['clinic_name'];
                  if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
                    graph_data[i][0] = data[k]['statistic_visualize'];
                    cycle_data[i][0] = data[k]['cycles'];
                    imp_data[i][0] = data[k]['statistic_visualize'];
                    tooltips[i*(2)+0] = "<b>Year: "+ years[i] +"</b><br/>";								
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National Number of Cycles: " + cycle_data[i][0] + "<br/>";
                    tooltips[i*(2)+0] = tooltips[i*(2)+0] + "National "+statistic_name+": " + Math.round(10*graph_data[i][0])/10;
                  }
                  else{
                    graph_data[0][i] = data[k]['statistic_visualize'];
                    cycle_data[0][i] = data[k]['cycles'];
                    imp_data[0][i] = data[k]['statistic_visualize'];
                    tooltips[0][i] = "<b>Year: "+ years[i] +"</b><br/>";
                    tooltips[0][i] = tooltips[0][i] + "National Number of Cycles: " + cycle_data[0][i] + "<br/>";
                    tooltips[0][i] = tooltips[0][i] + "National " + statistic_name+": " + Math.round(10*graph_data[0][i])/10;
                  }
                  if(data[k]['statistic_visualize'] > y_max){
                    y_max = data[k]['statistic_visualize'];
                  }
                }
              }
            }
          });
        }
        //Set the maximum y value		
        y_max = y_max + 5;
        if(y_max > 100.0){
          y_max = 100;
        }

        //Instantiate the new graph
        if(graph_type=="vertical_bar"){
          statistic_graph = new RGraph.Bar('comparison_canvas', graph_data);
        }
        else if(graph_type=="line"){
          statistic_graph = new RGraph.Line('comparison_canvas', graph_data);
        }
        else if(graph_type=="horizontal_bar"){
          statistic_graph = new RGraph.HBar('comparison_canvas', graph_data);
        }


        if(statistic_across=="age_group"){
          statistic_graph.Set('chart.labels', age_groups);
        }
        else if(statistic_across=="diagnosis"){
          statistic_graph.Set('chart.labels', diagnoses);
        }
        else{
          statistic_graph.Set('chart.labels', years);
        }

        statistic_graph.Set('chart.key', key_data);
        if(graph_type=="horizontal_bar" && statistic_across=="diagnosis"){
          statistic_graph.Set('chart.gutter.left', 175);
        }
        else{
          statistic_graph.Set('chart.gutter.left', 45);
        }
        statistic_graph.Set('chart.gutter.bottom', 150);
        statistic_graph.Set('chart.text.angle', 45);
        statistic_graph.Set('chart.key.position', 'gutter');
        statistic_graph.Set('chart.background.barcolor1', 'white');
        statistic_graph.Set('chart.background.barcolor2', 'ddffff');
        statistic_graph.Set('chart.colors', ['#65BDBD', '#7895A3', '#0F5151']);
        statistic_graph.Set('chart.variant', '3d');
        statistic_graph.Set('chart.text.font', 'Trebuchet MS');
        statistic_graph.Set('chart.text.size', 10);

        if(statistic_visualize=="avg_num_embs_transferred"){	
        }
        else{
          statistic_graph.Set('chart.units.post', '%');
        }
        if(graph_type=="horizontal_bar" || graph_type=="vertical_bar"){
          statistic_graph.Set('chart.tooltips', tooltips);
        }
        else if(graph_type=="line"){
          statistic_graph.Set('chart.tooltips', tooltips);
        }
        statistic_graph.Set('chart.shadow', true);
        statistic_graph.Set('chart.shadow.blur', 5);
        statistic_graph.Set('chart.shadow.offsetx', 2);
        statistic_graph.Set('chart.shadow.offsety', 0);
        statistic_graph.Set('chart.shadow.color', '#0F5151');
        //statistic_graph.Set('chart.background.image', "#{::Rails.root}/app/assets/images/ivfr_washout.jpg");

        //Bar graph grow
        if(graph_type=="vertical_bar" || graph_type=="horizontal_bar"){
          RGraph.Effects.Bar.Wave(statistic_graph);
        }
        else{
          RGraph.Effects.Line.jQuery.Trace(statistic_graph);
        }
      }
    });
  }